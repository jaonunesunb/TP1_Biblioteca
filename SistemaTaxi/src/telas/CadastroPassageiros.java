/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import MotoristaPassageiroVeiculo.Passageiro;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Pegad
 */
public class CadastroPassageiros extends javax.swing.JFrame {
    static ArrayList<Passageiro> listaPassageiros;
    private DefaultTableModel tableModel;
    String botao;
    /**
     * Creates new form CadastroPassageiros
     */
    public CadastroPassageiros() {
        initComponents();
        setLocationRelativeTo(null);
        listaPassageiros = new ArrayList();
        
        // habilitar ou desabilitar bot√µes
        btnSetNovoPassageiro.setEnabled(true);
        btnSalvarDadosPassageiro.setEnabled(false);
        btnCancelarRegistroPassageiro.setEnabled(false);
        btnEditarDadosPassageiro.setEnabled(false);
        btnExcluirDadosPassageiro.setEnabled(false);
        btnPesquisarPassageiro.setEnabled(true);
        btnOkPassageiro.setEnabled(false);
        
         // habilitar ou desabilitar texto
         txtIdPassageiro.setEnabled(false);
         txtNomePassageiro.setEnabled(false);
         txtTelefonePassageiro.setEnabled(false);
         txtRGPassageiro.setEnabled(false);
         txtCPFPassageiro.setEnabled(false);
    }
 
    public void carregarDadosTabela() {
        DefaultTableModel modelo = new DefaultTableModel(new Object[] {"ID", "Nome", "Telefone", "RG", "CPF"}, 0);
        
        for (int i = 0; i < listaPassageiros.size(); i++) {
            Object linha[] = new Object[] {listaPassageiros.get(i).get_Id(),
                                           listaPassageiros.get(i).getNome(),
                                           listaPassageiros.get(i).getTelefone(),
                                           listaPassageiros.get(i).getRG(),
                                           listaPassageiros.get(i).getCPF()};
            modelo.addRow(linha);
                    }
        tblPassageiros.setModel(modelo);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtIdPassageiro = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNomePassageiro = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTelefonePassageiro = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRGPassageiro = new javax.swing.JTextField();
        txtCPFPassageiro = new javax.swing.JTextField();
        btnOkPassageiro = new javax.swing.JButton();
        btnSetNovoPassageiro = new javax.swing.JButton();
        btnSalvarDadosPassageiro = new javax.swing.JButton();
        btnCancelarRegistroPassageiro = new javax.swing.JButton();
        btnEditarDadosPassageiro = new javax.swing.JButton();
        btnExcluirDadosPassageiro = new javax.swing.JButton();
        btnPesquisarPassageiro = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPassageiros = new javax.swing.JTable();
        btnSairPassageiro = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Passageiro");
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/imagens/taxi_icon_187780.png")).getImage());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Dados do Passageiro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 12))); // NOI18N

        jLabel1.setText("ID:");

        txtIdPassageiro.setToolTipText("Insira o ID do pasageiro");

        jLabel2.setText("Nome:");

        txtNomePassageiro.setToolTipText("Insira o nome do passageiro");

        jLabel3.setText("Telefone:");

        txtTelefonePassageiro.setToolTipText("Insira o telefone do passageiro");

        jLabel4.setText("RG:");

        jLabel5.setText("CPF:");

        txtRGPassageiro.setToolTipText("Insira o RG do passageiro");

        txtCPFPassageiro.setToolTipText("Insira o CPF do passageiro");

        btnOkPassageiro.setText("Ok");
        btnOkPassageiro.setToolTipText("Pesquisar pasageiro pelo ID");
        btnOkPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkPassageiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdPassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNomePassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtCPFPassageiro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                            .addComponent(txtRGPassageiro, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefonePassageiro, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnOkPassageiro)))
                .addContainerGap(415, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdPassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNomePassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtTelefonePassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtRGPassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtCPFPassageiro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnOkPassageiro)))
                .addContainerGap(46, Short.MAX_VALUE))
        );

        btnSetNovoPassageiro.setText("Novo");
        btnSetNovoPassageiro.setToolTipText("Inserir um novo passageiro");
        btnSetNovoPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetNovoPassageiroActionPerformed(evt);
            }
        });

        btnSalvarDadosPassageiro.setText("Salvar");
        btnSalvarDadosPassageiro.setToolTipText("Salvar os dados do passageiro");
        btnSalvarDadosPassageiro.setEnabled(false);
        btnSalvarDadosPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarDadosPassageiroActionPerformed(evt);
            }
        });

        btnCancelarRegistroPassageiro.setText("Cancelar");
        btnCancelarRegistroPassageiro.setToolTipText("Cancelar a a√ß√£o atual");
        btnCancelarRegistroPassageiro.setEnabled(false);
        btnCancelarRegistroPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarRegistroPassageiroActionPerformed(evt);
            }
        });

        btnEditarDadosPassageiro.setText("Editar");
        btnEditarDadosPassageiro.setToolTipText("Selecione um passageiro da tabela para alterar seus dados");
        btnEditarDadosPassageiro.setEnabled(false);
        btnEditarDadosPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarDadosPassageiroActionPerformed(evt);
            }
        });

        btnExcluirDadosPassageiro.setText("Excluir");
        btnExcluirDadosPassageiro.setToolTipText("Selecione um passageiro da tabela para excluir seus dados");
        btnExcluirDadosPassageiro.setEnabled(false);
        btnExcluirDadosPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirDadosPassageiroActionPerformed(evt);
            }
        });

        btnPesquisarPassageiro.setText("Pesquisar");
        btnPesquisarPassageiro.setToolTipText("Pesquisar um passageiro");
        btnPesquisarPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarPassageiroActionPerformed(evt);
            }
        });

        tblPassageiros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Telefone", "RG", "CPF"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblPassageiros.setToolTipText("Selecione um passageiro para visualizar seus dados");
        tblPassageiros.setOpaque(false);
        tblPassageiros.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPassageirosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPassageiros);

        btnSairPassageiro.setText("Sair");
        btnSairPassageiro.setToolTipText("Fechar a janela");
        btnSairPassageiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairPassageiroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
            .addGroup(layout.createSequentialGroup()
                .addGap(350, 350, 350)
                .addComponent(btnSairPassageiro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(btnSetNovoPassageiro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnSalvarDadosPassageiro)
                .addGap(42, 42, 42)
                .addComponent(btnCancelarRegistroPassageiro)
                .addGap(39, 39, 39)
                .addComponent(btnEditarDadosPassageiro)
                .addGap(58, 58, 58)
                .addComponent(btnExcluirDadosPassageiro)
                .addGap(84, 84, 84)
                .addComponent(btnPesquisarPassageiro)
                .addGap(48, 48, 48))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSetNovoPassageiro)
                    .addComponent(btnSalvarDadosPassageiro)
                    .addComponent(btnCancelarRegistroPassageiro)
                    .addComponent(btnEditarDadosPassageiro)
                    .addComponent(btnExcluirDadosPassageiro)
                    .addComponent(btnPesquisarPassageiro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSairPassageiro)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSetNovoPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetNovoPassageiroActionPerformed
        botao = "novo";
        // habilitar ou desabilitar bot√µes
        btnSetNovoPassageiro.setEnabled(false);
        btnSalvarDadosPassageiro.setEnabled(true);
        btnCancelarRegistroPassageiro.setEnabled(true);
        btnEditarDadosPassageiro.setEnabled(false);
        btnExcluirDadosPassageiro.setEnabled(false);
        btnPesquisarPassageiro.setEnabled(false);
        btnOkPassageiro.setEnabled(false);
        
         // habilitar ou desabilitar texto
         txtIdPassageiro.setEnabled(true);
         txtNomePassageiro.setEnabled(true);
         txtTelefonePassageiro.setEnabled(true);
         txtRGPassageiro.setEnabled(true);
         txtCPFPassageiro.setEnabled(true);
         
         txtIdPassageiro.requestFocus();
    }//GEN-LAST:event_btnSetNovoPassageiroActionPerformed

    private void btnPesquisarPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarPassageiroActionPerformed
        if(listaPassageiros.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Nenhuma passageiro foi cadastrado", "Mensagem", JOptionPane.PLAIN_MESSAGE);
        }
        else {
            txtIdPassageiro.setText("");
            txtNomePassageiro.setText("");
            txtTelefonePassageiro.setText("");
            txtRGPassageiro.setText("");
            txtCPFPassageiro.setText("");

           // habilitar ou desabilitar bot√µes
           btnSetNovoPassageiro.setEnabled(false);
           btnSalvarDadosPassageiro.setEnabled(false);
           btnCancelarRegistroPassageiro.setEnabled(true);
           btnEditarDadosPassageiro.setEnabled(false);
           btnExcluirDadosPassageiro.setEnabled(false);
           btnPesquisarPassageiro.setEnabled(false);
           btnOkPassageiro.setEnabled(true);

            // habilitar ou desabilitar texto
            txtIdPassageiro.setEnabled(false);
            txtNomePassageiro.setEnabled(false);
            txtTelefonePassageiro.setEnabled(false);
            txtRGPassageiro.setEnabled(false);
            txtCPFPassageiro.setEnabled(true);
        }
        
        
        
    }//GEN-LAST:event_btnPesquisarPassageiroActionPerformed

    private void btnSairPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairPassageiroActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnSairPassageiroActionPerformed

    private void btnSalvarDadosPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarDadosPassageiroActionPerformed
        if (txtIdPassageiro.getText().equals("" ) || txtNomePassageiro.getText().equals("") || 
                txtTelefonePassageiro.getText().equals("") || txtRGPassageiro.getText().equals("") || 
                txtCPFPassageiro.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Todos os campos devem ser preenchidos!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            
        }
        
        else {
             // get de dados
            int id = Integer.parseInt(txtIdPassageiro.getText());
            String nome = txtNomePassageiro.getText();
            String telefone = txtTelefonePassageiro.getText();
            String rg = txtRGPassageiro.getText();
            String cpf = txtCPFPassageiro.getText();
            
            if (botao.equals("novo")) {
                 Passageiro passageiro = new Passageiro(id, nome, telefone, rg, cpf);
            
                listaPassageiros.add(passageiro);
                JOptionPane.showMessageDialog(null, "Passageiro cadastrado com sucesso", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            }
            else if (botao.equals("editar")) {
                int i = tblPassageiros.getSelectedRow();
                
                listaPassageiros.get(i).set_id(id);
                listaPassageiros.get(i).setNome(nome);
                listaPassageiros.get(i).setTelefone(telefone);
                listaPassageiros.get(i).setRG(rg);
                listaPassageiros.get(i).setCPF(cpf);
                JOptionPane.showMessageDialog(null, "Registro alterado com sucesso!", "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            }

            carregarDadosTabela();

                // habilitar ou desabilitar bot√µes
                btnSetNovoPassageiro.setEnabled(true);
                btnSalvarDadosPassageiro.setEnabled(false);
                btnCancelarRegistroPassageiro.setEnabled(false);
                btnEditarDadosPassageiro.setEnabled(false);
                btnExcluirDadosPassageiro.setEnabled(false);
                btnPesquisarPassageiro.setEnabled(true);
                btnOkPassageiro.setEnabled(false);

                 // habilitar ou desabilitar texto
                 txtIdPassageiro.setEnabled(false);
                 txtNomePassageiro.setEnabled(false);
                 txtTelefonePassageiro.setEnabled(false);
                 txtRGPassageiro.setEnabled(false);
                 txtCPFPassageiro.setEnabled(false);

                 // limpar campos
                 txtIdPassageiro.setText("");
                 txtNomePassageiro.setText("");
                 txtTelefonePassageiro.setText("");
                 txtRGPassageiro.setText("");
                 txtCPFPassageiro.setText("");
        }
    }//GEN-LAST:event_btnSalvarDadosPassageiroActionPerformed

    private void btnCancelarRegistroPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarRegistroPassageiroActionPerformed
        // limpar campos
         txtIdPassageiro.setText("");
         txtNomePassageiro.setText("");
         txtTelefonePassageiro.setText("");
         txtRGPassageiro.setText("");
         txtCPFPassageiro.setText("");

        // habilitar ou desabilitar bot√µes
        btnSetNovoPassageiro.setEnabled(true);
        btnSalvarDadosPassageiro.setEnabled(false);
        btnCancelarRegistroPassageiro.setEnabled(false);
        btnEditarDadosPassageiro.setEnabled(false);
        btnExcluirDadosPassageiro.setEnabled(false);
        btnPesquisarPassageiro.setEnabled(true);
        btnOkPassageiro.setEnabled(false);
        
         // habilitar ou desabilitar texto
         txtIdPassageiro.setEnabled(false);
         txtNomePassageiro.setEnabled(false);
         txtTelefonePassageiro.setEnabled(false);
         txtRGPassageiro.setEnabled(false);
         txtCPFPassageiro.setEnabled(false);
    }//GEN-LAST:event_btnCancelarRegistroPassageiroActionPerformed

    private void btnOkPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkPassageiroActionPerformed
        if (txtCPFPassageiro.getText().equals("")) {
           JOptionPane.showMessageDialog(null, " O CPF do passageiro deve ser informado!", "message", JOptionPane.INFORMATION_MESSAGE);
       }
       else {
           Passageiro pas;
           String id = "";
           String nome = "";
           String telefone = "";
           String rg = "";
           String cpfPassageiro = "";
           String cpf = txtCPFPassageiro.getText();
      
           
           for (int i = 0; i < listaPassageiros.size(); i++) {
                pas = listaPassageiros.get(i);
                if (cpf.equals(pas.getCPF())) {
                    id = String.valueOf(pas.get_Id());
                    nome = pas.getNome();
                    telefone = pas.getTelefone();
                    rg = pas.getRG();
                    cpfPassageiro = String.valueOf(pas.getCPF());
                }
           }
           
           if (cpfPassageiro.equals("")) {
                JOptionPane.showMessageDialog(null, " Essa data n√£o pussui chamados", "message", JOptionPane.PLAIN_MESSAGE);
           }
           else {
               txtIdPassageiro.setText(id);
               txtNomePassageiro.setText(nome);
               txtTelefonePassageiro.setText(telefone);
               txtRGPassageiro.setText(rg);
               txtCPFPassageiro.setText(cpfPassageiro);
           }
       }
    }//GEN-LAST:event_btnOkPassageiroActionPerformed

    private void btnEditarDadosPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarDadosPassageiroActionPerformed
        botao = "editar";
        
        // habilitar ou desabilitar bot√µes
        btnSetNovoPassageiro.setEnabled(false);
        btnSalvarDadosPassageiro.setEnabled(true);
        btnCancelarRegistroPassageiro.setEnabled(true);
        btnEditarDadosPassageiro.setEnabled(false);
        btnExcluirDadosPassageiro.setEnabled(false);
        btnPesquisarPassageiro.setEnabled(false);
        btnOkPassageiro.setEnabled(false);
        
         // habilitar ou desabilitar texto
         txtIdPassageiro.setEnabled(true);
         txtNomePassageiro.setEnabled(true);
         txtTelefonePassageiro.setEnabled(true);
         txtRGPassageiro.setEnabled(true);
         txtCPFPassageiro.setEnabled(true);
        
    }//GEN-LAST:event_btnEditarDadosPassageiroActionPerformed

    private void tblPassageirosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPassageirosMouseClicked
        int i = tblPassageiros.getSelectedRow();
        
        if (i >= 0 && i < listaPassageiros.size()) {
            Passageiro pas = listaPassageiros.get(i);
            txtIdPassageiro.setText(String.valueOf(pas.get_Id()));
            txtNomePassageiro.setText(String.valueOf(pas.getNome()));
            txtTelefonePassageiro.setText(String.valueOf(pas.getTelefone()));
            txtRGPassageiro.setText(String.valueOf(pas.getRG()));
            txtCPFPassageiro.setText(String.valueOf(pas.getCPF()));
           
            
            btnSetNovoPassageiro.setEnabled(false);
            btnSalvarDadosPassageiro.setEnabled(false);
            btnCancelarRegistroPassageiro.setEnabled(false);
            btnEditarDadosPassageiro.setEnabled(true);
            btnExcluirDadosPassageiro.setEnabled(true);
            btnPesquisarPassageiro.setEnabled(true);
            btnOkPassageiro.setEnabled(false);
            }
    }//GEN-LAST:event_tblPassageirosMouseClicked

    private void btnExcluirDadosPassageiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirDadosPassageiroActionPerformed
        int i = tblPassageiros.getSelectedRow();
        
        if (i >= 0 && i < listaPassageiros.size()) {
            listaPassageiros.remove(i);
            carregarDadosTabela();
        }
        // limpar campos
         txtIdPassageiro.setText("");
         txtNomePassageiro.setText("");
         txtTelefonePassageiro.setText("");
         txtRGPassageiro.setText("");
         txtCPFPassageiro.setText("");

        // habilitar ou desabilitar bot√µes
        btnSetNovoPassageiro.setEnabled(true);
        btnSalvarDadosPassageiro.setEnabled(false);
        btnCancelarRegistroPassageiro.setEnabled(false);
        btnEditarDadosPassageiro.setEnabled(false);
        btnExcluirDadosPassageiro.setEnabled(false);
        btnPesquisarPassageiro.setEnabled(true);
        btnOkPassageiro.setEnabled(false);
        
         // habilitar ou desabilitar texto
         txtIdPassageiro.setEnabled(false);
         txtNomePassageiro.setEnabled(false);
         txtTelefonePassageiro.setEnabled(false);
         txtRGPassageiro.setEnabled(false);
         txtCPFPassageiro.setEnabled(false);
    }//GEN-LAST:event_btnExcluirDadosPassageiroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPassageiros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPassageiros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPassageiros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPassageiros.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPassageiros().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarRegistroPassageiro;
    private javax.swing.JButton btnEditarDadosPassageiro;
    private javax.swing.JButton btnExcluirDadosPassageiro;
    private javax.swing.JButton btnOkPassageiro;
    private javax.swing.JButton btnPesquisarPassageiro;
    private javax.swing.JButton btnSairPassageiro;
    private javax.swing.JButton btnSalvarDadosPassageiro;
    private javax.swing.JButton btnSetNovoPassageiro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblPassageiros;
    private javax.swing.JTextField txtCPFPassageiro;
    private javax.swing.JTextField txtIdPassageiro;
    private javax.swing.JTextField txtNomePassageiro;
    private javax.swing.JTextField txtRGPassageiro;
    private javax.swing.JTextField txtTelefonePassageiro;
    // End of variables declaration//GEN-END:variables
}
